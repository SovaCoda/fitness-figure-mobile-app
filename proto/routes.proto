syntax = "proto3";

option go_package = "./routes";
import "google/protobuf/empty.proto";

package routes;

service Routes {
    // USER ROUTES //
    rpc GetUser(User) returns (User) {}
    rpc CreateUser(User) returns (User) {}
    rpc UpdateUser(User) returns (User) {}
    rpc DeleteUser(User) returns (User) {}
    rpc UpdateUserEmail(UpdateEmailRequest) returns (User) {}

    // WORKOUT ROUTES //
    rpc GetWorkouts(User) returns (MultiWorkout) {}
    rpc GetWorkout(Workout) returns (Workout) {}
    rpc CreateWorkout(Workout) returns (Workout) {}
    rpc UpdateWorkout(Workout) returns (Workout) {}
    rpc DeleteWorkout(Workout) returns (Workout) {}

    // FIGURE INSTANCE ROUTES //
    rpc GetFigureInstance(FigureInstance) returns (FigureInstance) {}
    rpc UpdateFigureInstance(FigureInstance) returns (FigureInstance) {}
    rpc CreateFigureInstance(FigureInstance) returns (FigureInstance) {}
    rpc DeleteFigureInstance(FigureInstance) returns (FigureInstance) {}
    rpc GetFigureInstances(User) returns (MultiFigureInstance) {}

    // FIGURE ROUTES //
    rpc GetFigure(Figure) returns (Figure) {}
    rpc UpdateFigure(Figure) returns (Figure) {}
    rpc CreateFigure(Figure) returns (Figure) {}
    rpc DeleteFigure(Figure) returns (Figure) {}
    rpc GetFigures(google.protobuf.Empty) returns (MultiFigure) {}

    // SKIN INSTANCE ROUTES //
    rpc GetSkinInstance(SkinInstance) returns (SkinInstance) {}
    rpc UpdateSkinInstance(SkinInstance) returns (SkinInstance) {}
    rpc CreateSkinInstance(SkinInstance) returns (SkinInstance) {}
    rpc DeleteSkinInstance(SkinInstance) returns (SkinInstance) {}
    rpc GetSkinInstances(User) returns (MultiSkinInstance) {}

    // SKIN ROUTES //
    rpc GetSkin(Skin) returns (Skin) {}
    rpc UpdateSkin(Skin) returns (Skin) {}
    rpc CreateSkin(Skin) returns (Skin) {}
    rpc DeleteSkin(Skin) returns (Skin) {}
    rpc GetSkins(google.protobuf.Empty) returns (MultiSkin) {}

    // SURVEY ROUTES //
    rpc GetSurveyResponse(SurveyResponse) returns (SurveyResponse) {}
    rpc UpdateSurveyResponse(SurveyResponse) returns (SurveyResponse) {}
    rpc CreateSurveyResponse(SurveyResponse) returns (SurveyResponse) {}
    rpc DeleteSurveyResponse(SurveyResponse) returns (SurveyResponse) {}
    rpc GetSurveyResponses(User) returns (MultiSurveyResponse) {}
    rpc CreateSurveyResponseMulti(MultiSurveyResponse) returns (MultiSurveyResponse) {}
    
    // SERVER ACTIONS //
    rpc FigureDecay(FigureInstance) returns (GenericStringResponse) {}
    rpc UserWeeklyReset(User) returns (GenericStringResponse) {}
}

message GenericStringResponse {
    string message = 1;
}

message Workout {
    string Email = 1;
    string Start_date = 2;
    int64 Elapsed = 3;
    int64 Currency_Add = 4;
    string End_Date = 5;
    int64 Charge_Add = 6;
}

message MultiWorkout {
    repeated Workout workouts = 1;
}

message User {
    string email = 1;
    string cur_figure = 2;
    string name = 3;
    int64 currency = 4;
    int64 week_complete = 5;
    int64 week_goal = 6;
    string cur_workout = 7;
    int64 workout_min_time = 8;
    string last_reset = 9;
}

message MultiUser {
    repeated User users = 1;
}

message FigureInstance {
    string Figure_Id = 1;
    string Figure_Name = 2;
    string User_Email = 3;
    string Cur_Skin = 4;
    int32 Ev_Points = 5;
    int32 Charge = 6;
    int32 Mood = 7;
    string Last_Reset = 8;
    int32 Ev_Level = 9;
}

message MultiFigureInstance {
    repeated FigureInstance figureInstances = 1;
}

message Figure {
    string Figure_Name = 1;
    int32 Base_Ev_Gain = 2;
    int32 Base_Currency_Gain = 3;
    int32 Price = 4;
    int32 Stage1_Ev_Cutoff = 5;
    int32 Stage2_Ev_Cutoff = 6;
    int32 Stage3_Ev_Cutoff = 7;
    int32 Stage4_Ev_Cutoff = 8;
    int32 Stage5_Ev_Cutoff = 9;
    int32 Stage6_Ev_Cutoff = 10;
    int32 Stage7_Ev_Cutoff = 11;
    int32 Stage8_Ev_Cutoff = 12;
    int32 Stage9_Ev_Cutoff = 13;
    int32 Stage10_Ev_Cutoff = 14;
}

message MultiFigure {
    repeated Figure figures = 1;
}

message SkinInstance {
    string Skin_Id = 1;
    string Skin_Name = 2;
    string User_Email = 3;
    string Figure_Name = 4;
}

message MultiSkinInstance {
    repeated SkinInstance skinInstances = 1;
}

message Skin {
    string Skin_Name = 1;
    string Figure_Name = 2;
    int32 Price = 3;
}

message MultiSkin {
    repeated Skin skins = 1;
}

message SurveyResponse {
    string Email = 1;
    string Question = 2;
    string Answer = 3;
    string Date = 4; 
}

message MultiSurveyResponse {
    repeated SurveyResponse surveyResponses = 1;
}

message UpdateEmailRequest {
    string old_email = 1;
    string new_email = 2;
}