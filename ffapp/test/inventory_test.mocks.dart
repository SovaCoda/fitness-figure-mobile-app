// Mocks generated by Mockito 5.4.4 from annotations
// in ffapp/test/inventory_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i3;

import 'package:ffapp/main.dart' as _i2;
import 'package:ffapp/pages/home/store.dart' as _i4;
import 'package:ffapp/services/routes.pbgrpc.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SelectedFigureProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSelectedFigureProvider extends _i1.Mock
    implements _i2.SelectedFigureProvider {
  MockSelectedFigureProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get selectedFigureIndex => (super.noSuchMethod(
        Invocation.getter(#selectedFigureIndex),
        returnValue: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setSelectedFigureIndex(int? index) => super.noSuchMethod(
        Invocation.method(
          #setSelectedFigureIndex,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FigureInstancesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFigureInstancesProvider extends _i1.Mock
    implements _i4.FigureInstancesProvider {
  MockFigureInstancesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.FigureInstance> get listOfFigureInstances => (super.noSuchMethod(
        Invocation.getter(#listOfFigureInstances),
        returnValue: <_i5.FigureInstance>[],
      ) as List<_i5.FigureInstance>);

  @override
  set listOfFigureInstances(List<_i5.FigureInstance>? _listOfFigureInstances) =>
      super.noSuchMethod(
        Invocation.setter(
          #listOfFigureInstances,
          _listOfFigureInstances,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setListOfFigureInstances(
          List<_i5.FigureInstance>? listOfFigureInstances) =>
      super.noSuchMethod(
        Invocation.method(
          #initializeListOfFigureInstances,
          [listOfFigureInstances],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFigureInstanceCurSkin(
    String? figureName,
    String? curSkin,
    int? selectedFigureIndex,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setFigureInstanceCurSkin,
          [
            figureName,
            curSkin,
            selectedFigureIndex,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
