// Mocks generated by Mockito 5.4.4 from annotations
// in ffapp/test/dashboard_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i11;

import 'package:chat_gpt_sdk/chat_gpt_sdk.dart' as _i5;
import 'package:ffapp/components/utils/chat_model.dart' as _i13;
import 'package:ffapp/main.dart' as _i10;
import 'package:ffapp/services/auth.dart' as _i3;
import 'package:ffapp/services/flutterUser.dart' as _i8;
import 'package:ffapp/services/routes.pb.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:fixnum/fixnum.dart' as _i12;
import 'package:flutter/material.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiDailySnapshot_1 extends _i1.SmartFake
    implements _i2.MultiDailySnapshot {
  _FakeMultiDailySnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDailySnapshot_2 extends _i1.SmartFake implements _i2.DailySnapshot {
  _FakeDailySnapshot_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWorkout_3 extends _i1.SmartFake implements _i2.Workout {
  _FakeWorkout_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiWorkout_4 extends _i1.SmartFake implements _i2.MultiWorkout {
  _FakeMultiWorkout_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFigure_5 extends _i1.SmartFake implements _i2.Figure {
  _FakeFigure_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFigure_6 extends _i1.SmartFake implements _i2.MultiFigure {
  _FakeMultiFigure_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFigureInstance_7 extends _i1.SmartFake
    implements _i2.FigureInstance {
  _FakeFigureInstance_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFigureInstance_8 extends _i1.SmartFake
    implements _i2.MultiFigureInstance {
  _FakeMultiFigureInstance_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSkin_9 extends _i1.SmartFake implements _i2.Skin {
  _FakeSkin_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiSkin_10 extends _i1.SmartFake implements _i2.MultiSkin {
  _FakeMultiSkin_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSkinInstance_11 extends _i1.SmartFake implements _i2.SkinInstance {
  _FakeSkinInstance_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiSkinInstance_12 extends _i1.SmartFake
    implements _i2.MultiSkinInstance {
  _FakeMultiSkinInstance_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurveyResponse_13 extends _i1.SmartFake
    implements _i2.SurveyResponse {
  _FakeSurveyResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiSurveyResponse_14 extends _i1.SmartFake
    implements _i2.MultiSurveyResponse {
  _FakeMultiSurveyResponse_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOfflineDateTime_15 extends _i1.SmartFake
    implements _i2.OfflineDateTime {
  _FakeOfflineDateTime_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenericStringResponse_16 extends _i1.SmartFake
    implements _i2.GenericStringResponse {
  _FakeGenericStringResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthService_17 extends _i1.SmartFake implements _i3.AuthService {
  _FakeAuthService_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_18<T extends _i4.State<_i4.StatefulWidget>>
    extends _i1.SmartFake implements _i4.GlobalKey<T> {
  _FakeGlobalKey_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOpenAI_19 extends _i1.SmartFake implements _i5.OpenAI {
  _FakeOpenAI_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i7.User?> createUser(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i7.User?>.value(),
      ) as _i6.Future<_i7.User?>);

  @override
  _i6.Future<dynamic> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i7.User?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i6.Future<_i7.User?>.value(),
      ) as _i6.Future<_i7.User?>);

  @override
  _i6.Future<_i2.User?> getUserDBInfo() => (super.noSuchMethod(
        Invocation.method(
          #getUserDBInfo,
          [],
        ),
        returnValue: _i6.Future<_i2.User?>.value(),
      ) as _i6.Future<_i2.User?>);

  @override
  _i6.Future<_i2.User> updateUserDBInfo(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUserDBInfo,
          [user],
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #updateUserDBInfo,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.User>);

  @override
  _i6.Future<_i2.User> resetUserStreak(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #resetUserStreak,
          [user],
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #resetUserStreak,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.User>);

  @override
  _i6.Future<_i2.User> resetUserWeekComplete(_i2.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetUserWeekComplete,
          [user],
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #resetUserWeekComplete,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.User>);

  @override
  _i6.Future<dynamic> updateEmail(
    String? oldEmail,
    String? newEmail,
    _i7.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [
            oldEmail,
            newEmail,
            credential,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> completeEmailUpdate(
    String? oldEmail,
    String? newEmail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeEmailUpdate,
          [
            oldEmail,
            newEmail,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.MultiDailySnapshot> getDailySnapshots(
          _i2.DailySnapshot? dailySnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailySnapshots,
          [dailySnapshot],
        ),
        returnValue:
            _i6.Future<_i2.MultiDailySnapshot>.value(_FakeMultiDailySnapshot_1(
          this,
          Invocation.method(
            #getDailySnapshots,
            [dailySnapshot],
          ),
        )),
      ) as _i6.Future<_i2.MultiDailySnapshot>);

  @override
  _i6.Future<_i2.DailySnapshot> getDailySnapshot(
          _i2.DailySnapshot? dailySnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailySnapshot,
          [dailySnapshot],
        ),
        returnValue: _i6.Future<_i2.DailySnapshot>.value(_FakeDailySnapshot_2(
          this,
          Invocation.method(
            #getDailySnapshot,
            [dailySnapshot],
          ),
        )),
      ) as _i6.Future<_i2.DailySnapshot>);

  @override
  _i6.Future<_i2.DailySnapshot> createDailySnapshot(
          _i2.DailySnapshot? dailySnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDailySnapshot,
          [dailySnapshot],
        ),
        returnValue: _i6.Future<_i2.DailySnapshot>.value(_FakeDailySnapshot_2(
          this,
          Invocation.method(
            #createDailySnapshot,
            [dailySnapshot],
          ),
        )),
      ) as _i6.Future<_i2.DailySnapshot>);

  @override
  _i6.Future<_i2.DailySnapshot> updateDailySnapshot(
          _i2.DailySnapshot? dailySnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDailySnapshot,
          [dailySnapshot],
        ),
        returnValue: _i6.Future<_i2.DailySnapshot>.value(_FakeDailySnapshot_2(
          this,
          Invocation.method(
            #updateDailySnapshot,
            [dailySnapshot],
          ),
        )),
      ) as _i6.Future<_i2.DailySnapshot>);

  @override
  _i6.Future<_i2.DailySnapshot> deleteDailySnapshot(
          _i2.DailySnapshot? dailySnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDailySnapshot,
          [dailySnapshot],
        ),
        returnValue: _i6.Future<_i2.DailySnapshot>.value(_FakeDailySnapshot_2(
          this,
          Invocation.method(
            #deleteDailySnapshot,
            [dailySnapshot],
          ),
        )),
      ) as _i6.Future<_i2.DailySnapshot>);

  @override
  _i6.Future<_i2.Workout> createWorkout(_i2.Workout? workout) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWorkout,
          [workout],
        ),
        returnValue: _i6.Future<_i2.Workout>.value(_FakeWorkout_3(
          this,
          Invocation.method(
            #createWorkout,
            [workout],
          ),
        )),
      ) as _i6.Future<_i2.Workout>);

  @override
  _i6.Future<_i2.Workout> updateWorkout(_i2.Workout? workout) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWorkout,
          [workout],
        ),
        returnValue: _i6.Future<_i2.Workout>.value(_FakeWorkout_3(
          this,
          Invocation.method(
            #updateWorkout,
            [workout],
          ),
        )),
      ) as _i6.Future<_i2.Workout>);

  @override
  _i6.Future<void> deleteWorkout(_i2.Workout? workout) => (super.noSuchMethod(
        Invocation.method(
          #deleteWorkout,
          [workout],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.MultiWorkout> getWorkouts() => (super.noSuchMethod(
        Invocation.method(
          #getWorkouts,
          [],
        ),
        returnValue: _i6.Future<_i2.MultiWorkout>.value(_FakeMultiWorkout_4(
          this,
          Invocation.method(
            #getWorkouts,
            [],
          ),
        )),
      ) as _i6.Future<_i2.MultiWorkout>);

  @override
  _i6.Future<_i2.Workout> getWorkout(_i2.Workout? workout) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkout,
          [workout],
        ),
        returnValue: _i6.Future<_i2.Workout>.value(_FakeWorkout_3(
          this,
          Invocation.method(
            #getWorkout,
            [workout],
          ),
        )),
      ) as _i6.Future<_i2.Workout>);

  @override
  _i6.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updatePassword(
    String? password,
    dynamic credential,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [
            password,
            credential,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #updateName,
          [name],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateWeeklyGoal(int? goal) => (super.noSuchMethod(
        Invocation.method(
          #updateWeeklyGoal,
          [goal],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateCurrency(int? currency) => (super.noSuchMethod(
        Invocation.method(
          #updateCurrency,
          [currency],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.Figure> getFigure(_i2.Figure? figure) => (super.noSuchMethod(
        Invocation.method(
          #getFigure,
          [figure],
        ),
        returnValue: _i6.Future<_i2.Figure>.value(_FakeFigure_5(
          this,
          Invocation.method(
            #getFigure,
            [figure],
          ),
        )),
      ) as _i6.Future<_i2.Figure>);

  @override
  _i6.Future<_i2.Figure> updateFigure(_i2.Figure? figure) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFigure,
          [figure],
        ),
        returnValue: _i6.Future<_i2.Figure>.value(_FakeFigure_5(
          this,
          Invocation.method(
            #updateFigure,
            [figure],
          ),
        )),
      ) as _i6.Future<_i2.Figure>);

  @override
  _i6.Future<_i2.Figure> createFigure(_i2.Figure? figure) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFigure,
          [figure],
        ),
        returnValue: _i6.Future<_i2.Figure>.value(_FakeFigure_5(
          this,
          Invocation.method(
            #createFigure,
            [figure],
          ),
        )),
      ) as _i6.Future<_i2.Figure>);

  @override
  _i6.Future<_i2.Figure> deleteFigure(_i2.Figure? figure) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFigure,
          [figure],
        ),
        returnValue: _i6.Future<_i2.Figure>.value(_FakeFigure_5(
          this,
          Invocation.method(
            #deleteFigure,
            [figure],
          ),
        )),
      ) as _i6.Future<_i2.Figure>);

  @override
  _i6.Future<_i2.MultiFigure> getFigures() => (super.noSuchMethod(
        Invocation.method(
          #getFigures,
          [],
        ),
        returnValue: _i6.Future<_i2.MultiFigure>.value(_FakeMultiFigure_6(
          this,
          Invocation.method(
            #getFigures,
            [],
          ),
        )),
      ) as _i6.Future<_i2.MultiFigure>);

  @override
  _i6.Future<_i2.FigureInstance> getFigureInstance(
          _i2.FigureInstance? figureInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFigureInstance,
          [figureInstance],
        ),
        returnValue: _i6.Future<_i2.FigureInstance>.value(_FakeFigureInstance_7(
          this,
          Invocation.method(
            #getFigureInstance,
            [figureInstance],
          ),
        )),
      ) as _i6.Future<_i2.FigureInstance>);

  @override
  _i6.Future<_i2.FigureInstance> updateFigureInstance(
          _i2.FigureInstance? figureInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFigureInstance,
          [figureInstance],
        ),
        returnValue: _i6.Future<_i2.FigureInstance>.value(_FakeFigureInstance_7(
          this,
          Invocation.method(
            #updateFigureInstance,
            [figureInstance],
          ),
        )),
      ) as _i6.Future<_i2.FigureInstance>);

  @override
  _i6.Future<_i2.FigureInstance> createFigureInstance(
          _i2.FigureInstance? figureInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFigureInstance,
          [figureInstance],
        ),
        returnValue: _i6.Future<_i2.FigureInstance>.value(_FakeFigureInstance_7(
          this,
          Invocation.method(
            #createFigureInstance,
            [figureInstance],
          ),
        )),
      ) as _i6.Future<_i2.FigureInstance>);

  @override
  _i6.Future<_i2.FigureInstance> deleteFigureInstance(
          _i2.FigureInstance? figureInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFigureInstance,
          [figureInstance],
        ),
        returnValue: _i6.Future<_i2.FigureInstance>.value(_FakeFigureInstance_7(
          this,
          Invocation.method(
            #deleteFigureInstance,
            [figureInstance],
          ),
        )),
      ) as _i6.Future<_i2.FigureInstance>);

  @override
  _i6.Future<_i2.MultiFigureInstance> getFigureInstances(_i2.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFigureInstances,
          [user],
        ),
        returnValue: _i6.Future<_i2.MultiFigureInstance>.value(
            _FakeMultiFigureInstance_8(
          this,
          Invocation.method(
            #getFigureInstances,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.MultiFigureInstance>);

  @override
  _i6.Future<_i2.Skin> getSkin(_i2.Skin? skin) => (super.noSuchMethod(
        Invocation.method(
          #getSkin,
          [skin],
        ),
        returnValue: _i6.Future<_i2.Skin>.value(_FakeSkin_9(
          this,
          Invocation.method(
            #getSkin,
            [skin],
          ),
        )),
      ) as _i6.Future<_i2.Skin>);

  @override
  _i6.Future<_i2.MultiSkin> getSkins() => (super.noSuchMethod(
        Invocation.method(
          #getSkins,
          [],
        ),
        returnValue: _i6.Future<_i2.MultiSkin>.value(_FakeMultiSkin_10(
          this,
          Invocation.method(
            #getSkins,
            [],
          ),
        )),
      ) as _i6.Future<_i2.MultiSkin>);

  @override
  _i6.Future<_i2.Skin> updateSkin(_i2.Skin? skin) => (super.noSuchMethod(
        Invocation.method(
          #updateSkin,
          [skin],
        ),
        returnValue: _i6.Future<_i2.Skin>.value(_FakeSkin_9(
          this,
          Invocation.method(
            #updateSkin,
            [skin],
          ),
        )),
      ) as _i6.Future<_i2.Skin>);

  @override
  _i6.Future<_i2.Skin> createSkin(_i2.Skin? skin) => (super.noSuchMethod(
        Invocation.method(
          #createSkin,
          [skin],
        ),
        returnValue: _i6.Future<_i2.Skin>.value(_FakeSkin_9(
          this,
          Invocation.method(
            #createSkin,
            [skin],
          ),
        )),
      ) as _i6.Future<_i2.Skin>);

  @override
  _i6.Future<_i2.Skin> deleteSkin(_i2.Skin? skin) => (super.noSuchMethod(
        Invocation.method(
          #deleteSkin,
          [skin],
        ),
        returnValue: _i6.Future<_i2.Skin>.value(_FakeSkin_9(
          this,
          Invocation.method(
            #deleteSkin,
            [skin],
          ),
        )),
      ) as _i6.Future<_i2.Skin>);

  @override
  _i6.Future<_i2.SkinInstance> getSkinInstance(
          _i2.SkinInstance? skinInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSkinInstance,
          [skinInstance],
        ),
        returnValue: _i6.Future<_i2.SkinInstance>.value(_FakeSkinInstance_11(
          this,
          Invocation.method(
            #getSkinInstance,
            [skinInstance],
          ),
        )),
      ) as _i6.Future<_i2.SkinInstance>);

  @override
  _i6.Future<_i2.SkinInstance> updateSkinInstance(
          _i2.SkinInstance? skinInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSkinInstance,
          [skinInstance],
        ),
        returnValue: _i6.Future<_i2.SkinInstance>.value(_FakeSkinInstance_11(
          this,
          Invocation.method(
            #updateSkinInstance,
            [skinInstance],
          ),
        )),
      ) as _i6.Future<_i2.SkinInstance>);

  @override
  _i6.Future<_i2.SkinInstance> createSkinInstance(
          _i2.SkinInstance? skinInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSkinInstance,
          [skinInstance],
        ),
        returnValue: _i6.Future<_i2.SkinInstance>.value(_FakeSkinInstance_11(
          this,
          Invocation.method(
            #createSkinInstance,
            [skinInstance],
          ),
        )),
      ) as _i6.Future<_i2.SkinInstance>);

  @override
  _i6.Future<_i2.SkinInstance> deleteSkinInstance(
          _i2.SkinInstance? skinInstance) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSkinInstance,
          [skinInstance],
        ),
        returnValue: _i6.Future<_i2.SkinInstance>.value(_FakeSkinInstance_11(
          this,
          Invocation.method(
            #deleteSkinInstance,
            [skinInstance],
          ),
        )),
      ) as _i6.Future<_i2.SkinInstance>);

  @override
  _i6.Future<_i2.MultiSkinInstance> getSkinInstances(_i2.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSkinInstances,
          [user],
        ),
        returnValue:
            _i6.Future<_i2.MultiSkinInstance>.value(_FakeMultiSkinInstance_12(
          this,
          Invocation.method(
            #getSkinInstances,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.MultiSkinInstance>);

  @override
  _i6.Future<_i2.SurveyResponse> getSurveyResponse(
          _i2.SurveyResponse? surveyResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurveyResponse,
          [surveyResponse],
        ),
        returnValue:
            _i6.Future<_i2.SurveyResponse>.value(_FakeSurveyResponse_13(
          this,
          Invocation.method(
            #getSurveyResponse,
            [surveyResponse],
          ),
        )),
      ) as _i6.Future<_i2.SurveyResponse>);

  @override
  _i6.Future<_i2.SurveyResponse> updateSurveyResponse(
          _i2.SurveyResponse? surveyResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSurveyResponse,
          [surveyResponse],
        ),
        returnValue:
            _i6.Future<_i2.SurveyResponse>.value(_FakeSurveyResponse_13(
          this,
          Invocation.method(
            #updateSurveyResponse,
            [surveyResponse],
          ),
        )),
      ) as _i6.Future<_i2.SurveyResponse>);

  @override
  _i6.Future<_i2.SurveyResponse> createSurveyResponse(
          _i2.SurveyResponse? surveyResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSurveyResponse,
          [surveyResponse],
        ),
        returnValue:
            _i6.Future<_i2.SurveyResponse>.value(_FakeSurveyResponse_13(
          this,
          Invocation.method(
            #createSurveyResponse,
            [surveyResponse],
          ),
        )),
      ) as _i6.Future<_i2.SurveyResponse>);

  @override
  _i6.Future<_i2.SurveyResponse> deleteSurveyResponse(
          _i2.SurveyResponse? surveyResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSurveyResponse,
          [surveyResponse],
        ),
        returnValue:
            _i6.Future<_i2.SurveyResponse>.value(_FakeSurveyResponse_13(
          this,
          Invocation.method(
            #deleteSurveyResponse,
            [surveyResponse],
          ),
        )),
      ) as _i6.Future<_i2.SurveyResponse>);

  @override
  _i6.Future<_i2.MultiSurveyResponse> getSurveyResponses(_i2.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurveyResponses,
          [user],
        ),
        returnValue: _i6.Future<_i2.MultiSurveyResponse>.value(
            _FakeMultiSurveyResponse_14(
          this,
          Invocation.method(
            #getSurveyResponses,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.MultiSurveyResponse>);

  @override
  _i6.Future<_i2.MultiSurveyResponse> createSurveyResponseMulti(
          _i2.MultiSurveyResponse? multiSurveyResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSurveyResponseMulti,
          [multiSurveyResponse],
        ),
        returnValue: _i6.Future<_i2.MultiSurveyResponse>.value(
            _FakeMultiSurveyResponse_14(
          this,
          Invocation.method(
            #createSurveyResponseMulti,
            [multiSurveyResponse],
          ),
        )),
      ) as _i6.Future<_i2.MultiSurveyResponse>);

  @override
  _i6.Future<_i2.OfflineDateTime> getOfflineDateTime(
          _i2.OfflineDateTime? offlineDateTime) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOfflineDateTime,
          [offlineDateTime],
        ),
        returnValue:
            _i6.Future<_i2.OfflineDateTime>.value(_FakeOfflineDateTime_15(
          this,
          Invocation.method(
            #getOfflineDateTime,
            [offlineDateTime],
          ),
        )),
      ) as _i6.Future<_i2.OfflineDateTime>);

  @override
  _i6.Future<_i2.OfflineDateTime> updateOfflineDateTime(
          _i2.OfflineDateTime? offlineDateTime) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOfflineDateTime,
          [offlineDateTime],
        ),
        returnValue:
            _i6.Future<_i2.OfflineDateTime>.value(_FakeOfflineDateTime_15(
          this,
          Invocation.method(
            #updateOfflineDateTime,
            [offlineDateTime],
          ),
        )),
      ) as _i6.Future<_i2.OfflineDateTime>);

  @override
  _i6.Future<_i2.OfflineDateTime> deleteOfflineDateTime(
          _i2.OfflineDateTime? offlineDateTime) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOfflineDateTime,
          [offlineDateTime],
        ),
        returnValue:
            _i6.Future<_i2.OfflineDateTime>.value(_FakeOfflineDateTime_15(
          this,
          Invocation.method(
            #deleteOfflineDateTime,
            [offlineDateTime],
          ),
        )),
      ) as _i6.Future<_i2.OfflineDateTime>);

  @override
  _i6.Future<_i2.GenericStringResponse> figureDecay(
          _i2.FigureInstance? figure) =>
      (super.noSuchMethod(
        Invocation.method(
          #figureDecay,
          [figure],
        ),
        returnValue: _i6.Future<_i2.GenericStringResponse>.value(
            _FakeGenericStringResponse_16(
          this,
          Invocation.method(
            #figureDecay,
            [figure],
          ),
        )),
      ) as _i6.Future<_i2.GenericStringResponse>);

  @override
  _i6.Future<_i2.GenericStringResponse> userReset(_i2.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #userReset,
          [user],
        ),
        returnValue: _i6.Future<_i2.GenericStringResponse>.value(
            _FakeGenericStringResponse_16(
          this,
          Invocation.method(
            #userReset,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.GenericStringResponse>);
}

/// A class which mocks [FlutterUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterUser extends _i1.Mock implements _i8.FlutterUser {
  MockFlutterUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthService get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeAuthService_17(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i3.AuthService);

  @override
  set auth(_i3.AuthService? _auth) => super.noSuchMethod(
        Invocation.setter(
          #auth,
          _auth,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> initAuthService() => (super.noSuchMethod(
        Invocation.method(
          #initAuthService,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> checkUser() => (super.noSuchMethod(
        Invocation.method(
          #checkUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getEmail,
            [],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<int> getWorkoutGoal() => (super.noSuchMethod(
        Invocation.method(
          #getWorkoutGoal,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getWeeklyCompleted() => (super.noSuchMethod(
        Invocation.method(
          #getWeeklyCompleted,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<String> getCurrentFigure() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentFigure,
          [],
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrentFigure,
            [],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i2.User> updateUser(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.User>);

  @override
  _i6.Future<String> getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getName,
            [],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> getCurrency() => (super.noSuchMethod(
        Invocation.method(
          #getCurrency,
          [],
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getCurrency,
            [],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<int> getWorkoutMinTime() => (super.noSuchMethod(
        Invocation.method(
          #getWorkoutMinTime,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getCurrencyInt() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencyInt,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<_i2.User> updateCurrency(int? currency) => (super.noSuchMethod(
        Invocation.method(
          #updateCurrency,
          [currency],
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #updateCurrency,
            [currency],
          ),
        )),
      ) as _i6.Future<_i2.User>);

  @override
  void logoutUser() => super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppBarAndBottomNavigationBarModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppBarAndBottomNavigationBarModel extends _i1.Mock
    implements _i10.AppBarAndBottomNavigationBarModel {
  MockAppBarAndBottomNavigationBarModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get usableScreenHeight => (super.noSuchMethod(
        Invocation.getter(#usableScreenHeight),
        returnValue: 0.0,
      ) as double);

  @override
  set usableScreenHeight(double? _usableScreenHeight) => super.noSuchMethod(
        Invocation.setter(
          #usableScreenHeight,
          _usableScreenHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.GlobalKey<_i4.State<_i4.StatefulWidget>> get appBarKey =>
      (super.noSuchMethod(
        Invocation.getter(#appBarKey),
        returnValue: _FakeGlobalKey_18<_i4.State<_i4.StatefulWidget>>(
          this,
          Invocation.getter(#appBarKey),
        ),
      ) as _i4.GlobalKey<_i4.State<_i4.StatefulWidget>>);

  @override
  _i4.GlobalKey<_i4.State<_i4.StatefulWidget>> get bottomNavBarKey =>
      (super.noSuchMethod(
        Invocation.getter(#bottomNavBarKey),
        returnValue: _FakeGlobalKey_18<_i4.State<_i4.StatefulWidget>>(
          this,
          Invocation.getter(#bottomNavBarKey),
        ),
      ) as _i4.GlobalKey<_i4.State<_i4.StatefulWidget>>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setAppBarKey(_i4.GlobalKey<_i4.State<_i4.StatefulWidget>>? newKey) =>
      super.noSuchMethod(
        Invocation.method(
          #setAppBarKey,
          [newKey],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBottomNavBarKey(
          _i4.GlobalKey<_i4.State<_i4.StatefulWidget>>? newKey) =>
      super.noSuchMethod(
        Invocation.method(
          #setBottomNavBarKey,
          [newKey],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setUsableScreenHeight(double? newHeight) => super.noSuchMethod(
        Invocation.method(
          #setUsableScreenHeight,
          [newHeight],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CurrencyModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyModel extends _i1.Mock implements _i10.CurrencyModel {
  MockCurrencyModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#currency),
        ),
      ) as String);

  @override
  set currency(String? _currency) => super.noSuchMethod(
        Invocation.setter(
          #currency,
          _currency,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setCurrency(String? newCurrency) => super.noSuchMethod(
        Invocation.method(
          #setCurrency,
          [newCurrency],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addToCurrency(double? numberToAdd) => super.noSuchMethod(
        Invocation.method(
          #addToCurrency,
          [numberToAdd],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserModel extends _i1.Mock implements _i10.UserModel {
  MockUserModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set user(_i2.User? _user) => super.noSuchMethod(
        Invocation.setter(
          #user,
          _user,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get baseGain => (super.noSuchMethod(
        Invocation.getter(#baseGain),
        returnValue: 0,
      ) as int);

  @override
  int get streak => (super.noSuchMethod(
        Invocation.getter(#streak),
        returnValue: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setUser(_i2.User? newUser) => super.noSuchMethod(
        Invocation.method(
          #setUser,
          [newUser],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setUserWeekCompleted(_i12.Int64? newValue) => super.noSuchMethod(
        Invocation.method(
          #setUserWeekCompleted,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setUserWeekGoal(_i12.Int64? newValue) => super.noSuchMethod(
        Invocation.method(
          #setUserWeekGoal,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setWorkoutMinTime(_i12.Int64? newValue) => super.noSuchMethod(
        Invocation.method(
          #setWorkoutMinTime,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPremium(_i12.Int64? premium) => super.noSuchMethod(
        Invocation.method(
          #setPremium,
          [premium],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isPremium() => (super.noSuchMethod(
        Invocation.method(
          #isPremium,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FigureModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFigureModel extends _i1.Mock implements _i10.FigureModel {
  MockFigureModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set figure(_i2.FigureInstance? _figure) => super.noSuchMethod(
        Invocation.setter(
          #figure,
          _figure,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get readyToEvolve => (super.noSuchMethod(
        Invocation.getter(#readyToEvolve),
        returnValue: false,
      ) as bool);

  @override
  set readyToEvolve(bool? _readyToEvolve) => super.noSuchMethod(
        Invocation.setter(
          #readyToEvolve,
          _readyToEvolve,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, bool> get capabilities => (super.noSuchMethod(
        Invocation.getter(#capabilities),
        returnValue: <String, bool>{},
      ) as Map<String, bool>);

  @override
  set capabilities(Map<String, bool>? _capabilities) => super.noSuchMethod(
        Invocation.setter(
          #capabilities,
          _capabilities,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, int> get capabilityUnlocks => (super.noSuchMethod(
        Invocation.getter(#capabilityUnlocks),
        returnValue: <String, int>{},
      ) as Map<String, int>);

  @override
  set capabilityUnlocks(Map<String, int>? _capabilityUnlocks) =>
      super.noSuchMethod(
        Invocation.setter(
          #capabilityUnlocks,
          _capabilityUnlocks,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get EVLevel => (super.noSuchMethod(
        Invocation.getter(#EVLevel),
        returnValue: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void updateCapabilities(_i2.FigureInstance? figure) => super.noSuchMethod(
        Invocation.method(
          #updateCapabilities,
          [figure],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFigure(_i2.FigureInstance? newFigure) => super.noSuchMethod(
        Invocation.method(
          #setFigure,
          [newFigure],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String composeFigureUrl() => (super.noSuchMethod(
        Invocation.method(
          #composeFigureUrl,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #composeFigureUrl,
            [],
          ),
        ),
      ) as String);

  @override
  void setFigureSkin(String? newValue) => super.noSuchMethod(
        Invocation.method(
          #setFigureSkin,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFigureLevel(int? newValue) => super.noSuchMethod(
        Invocation.method(
          #setFigureLevel,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFigureEv(int? newValue) => super.noSuchMethod(
        Invocation.method(
          #setFigureEv,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFigureCharge(int? newValue) => super.noSuchMethod(
        Invocation.method(
          #setFigureCharge,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getFigureEvPoints(String? figureName) => (super.noSuchMethod(
        Invocation.method(
          #getFigureEvPoints,
          [figureName],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getFigureEvLevel(String? figureName) => (super.noSuchMethod(
        Invocation.method(
          #getFigureEvLevel,
          [figureName],
        ),
        returnValue: 0,
      ) as int);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [InventoryModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockInventoryModel extends _i1.Mock implements _i10.InventoryModel {
  MockInventoryModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.FigureInstance> get figureInstancesList => (super.noSuchMethod(
        Invocation.getter(#figureInstancesList),
        returnValue: <_i2.FigureInstance>[],
      ) as List<_i2.FigureInstance>);

  @override
  set figureInstancesList(List<_i2.FigureInstance>? _figureInstancesList) =>
      super.noSuchMethod(
        Invocation.setter(
          #figureInstancesList,
          _figureInstancesList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setFigureInstancesList(
          List<_i2.FigureInstance>? newFigureInstancesList) =>
      super.noSuchMethod(
        Invocation.method(
          #setFigureInstancesList,
          [newFigureInstancesList],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatModel extends _i1.Mock implements _i13.ChatModel {
  MockChatModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i13.ChatMessage> get messages => (super.noSuchMethod(
        Invocation.getter(#messages),
        returnValue: <_i13.ChatMessage>[],
      ) as List<_i13.ChatMessage>);

  @override
  set messages(List<_i13.ChatMessage>? _messages) => super.noSuchMethod(
        Invocation.setter(
          #messages,
          _messages,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set robot(String? _robot) => super.noSuchMethod(
        Invocation.setter(
          #robot,
          _robot,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set instructions(String? _instructions) => super.noSuchMethod(
        Invocation.setter(
          #instructions,
          _instructions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set personalityModules(List<String?>? _personalityModules) =>
      super.noSuchMethod(
        Invocation.setter(
          #personalityModules,
          _personalityModules,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.OpenAI get openAI => (super.noSuchMethod(
        Invocation.getter(#openAI),
        returnValue: _FakeOpenAI_19(
          this,
          Invocation.getter(#openAI),
        ),
      ) as _i5.OpenAI);

  @override
  set openAI(_i5.OpenAI? _openAI) => super.noSuchMethod(
        Invocation.setter(
          #openAI,
          _openAI,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> sendMessage(
    String? message,
    String? role,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [
            message,
            role,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void addMessage(_i13.ChatMessage? message) => super.noSuchMethod(
        Invocation.method(
          #addMessage,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
